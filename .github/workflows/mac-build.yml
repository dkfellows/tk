name: macOS
on: [push]
env:
  ERROR_ON_FAILURES: 1
jobs:
  with-Xcode:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: tk/macosx
    steps:
      - name: Checkout Tk
        uses: actions/checkout@v2
        with:
          path: tk
      - name: Checkout Tcl
        uses: actions/checkout@v2
        with:
          repository: tcltk/tcl
          ref: core-8-branch
          path: tcl
      - name: Prepare
        run: |
          touch tk/generic/tkStubInit.c
          mkdir build
          echo "BUILD_DIR=`cd build && pwd`" >> $GITHUB_ENV
          echo "DESTDIR=`cd build && pwd`" >> $GITHUB_ENV
        working-directory: .
      - name: Build Tcl
        run: |
          make all
        working-directory: tcl/macosx
      - name: Build
        run: |
          make all install || {
            echo "::error::Failure during Build"
            exit 1
          }
      - name: Run Tests
        run: |
          make test styles=develop | tee out-tests.txt || {
            echo "::error::Failure during Test"
            exit 1
          }
          cat out-tests.txt | grep -q "Failed[[:space:]][[:space:]]*[1-9]" && {
            echo "::error::Failure during Test"
            exit 1
          }
        env:
          MAC_CI: 1
  Unix-like:
    runs-on: macos-latest
    strategy:
      matrix:
        symbols:
          - 'no'
          - 'mem'
        options:
          - '--enable-aqua'
          - '--disable-aqua'
    defaults:
      run:
        shell: bash
        working-directory: tk/unix
    steps:
      - name: Checkout Tk
        uses: actions/checkout@v2
        with:
          path: tk
      - name: Checkout Tcl
        uses: actions/checkout@v2
        with:
          repository: tcltk/tcl
          ref: core-8-branch
          path: tcl
      - name: Prepare
        run: |
          touch tkStubInit.c
          mkdir "$HOME/install dir"
          echo "USE_XQUARTZ=$SET_DISPLAY" >> $GITHUB_ENV
          if [ $SET_DISPLAY == true ]; then
            echo "DISPLAY=:0" >> $GITHUB_ENV
          fi
        working-directory: tk/generic
        env:
          SET_DISPLAY: ${{ contains(matrix.options, '--disable-aqua') }}
      - name: Adding binary dependencies
        if: ${{ env.USE_XQUARTZ }}
        run: |
          brew cask install xquartz
        working-directory: .
      - name: Build Tcl
        # Note that macOS is always a 64 bit platform
        run: |
          ./configure --enable-64bit ${CFGOPT} "--prefix=$HOME/install dir" || {
            cat config.log
            echo "::error::Failure during Tcl Configure"
            exit 1
          }
          make all || {
            echo "::error::Failure during Tcl Build"
            exit 1
          }
          make install || {
            echo "::error::Failure during Tcl Install"
            exit 1
          }
        working-directory: tcl/unix
        env:
          CFGOPT: --enable-symbols=${{ matrix.symbols }}
      - name: Configure (symbols=${{ matrix.symbols }} ${{matrix.options }})
        # Note that macOS is always a 64 bit platform
        run: |
          ./configure --enable-64bit ${CFGOPT} "--prefix=$HOME/install dir" || {
            cat config.log
            echo "::error::Failure during Configure"
            exit 1
          }
        env:
          CFGOPT: --enable-symbols=${{ matrix.symbols }} ${{matrix.options }}
      - name: Build
        run: |
          make all tktest || {
            echo "::error::Failure during Build"
            exit 1
          }
      - name: Run Tests
        run: |
          if [ $USE_XQUARTZ == true ]; then
            PATH=$PATH:/opt/X11/bin
            Xquartz &
            XQUARTZ_PID = $!
            echo Launched Xquartz as process $XQUARTZ_PID
            trap "kill $XQUARTZ_PID" 0
            sleep 2
          fi
          make test | tee out-tests.txt || {
            echo "::error::Failure during Test"
            exit 1
          }
          cat out-tests.txt | grep -q "Failed[[:space:]][[:space:]]*[1-9]" && {
            echo "::error::Failure during Test"
            exit 1
          }
        env:
          MAC_CI: 1
      - name: Trial Installation
        run: |
          make install || {
            cat config.log
            echo "::error::Failure during Install"
            exit 1
          }
