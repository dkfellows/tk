name: Build Binaries
on: [push]
jobs:
  linux:
    name: Linux
    runs-on: ubuntu-16.04
    defaults:
      run:
        shell: bash
    env:
      CC: gcc
      CFGOPT: --disable-symbols --disable-shared
    steps:
      - name: Checkout Tk
        uses: actions/checkout@v2
        with:
          path: tk
      - name: Checkout Tcl 8.7
        uses: actions/checkout@v2
        with:
          repository: tcltk/tcl
          ref: core-8-branch
          path: tcl
      - name: Setup Environment
        run: |
          sudo apt-get install libxss-dev
          mkdir install
          touch tcl/generic/tclStubInit.c tcl/generic/tclOOStubInit.c
          touch tk/generic/tkStubInit.c
          echo "INST_DIR=$(cd install;pwd)" >> $GITHUB_ENV
          echo "TOOL_DIR=$(cd tcl/tools;pwd)" >> $GITHUB_ENV
          echo "VER_PATH=$(cd tcl/tools; pwd)/addVerToFile.tcl" >> $GITHUB_ENV
        working-directory: "."
      - name: Configure Tcl
        run: |
          ./configure $CFGOPT --enable-zipfs --prefix=$INST_DIR
        working-directory: tcl/unix
      - name: Build & Install Tcl
        run: |
          make binaries libraries tclzipfile install
          make shell SCRIPT="$VER_PATH $GITHUB_ENV"
        working-directory: tcl/unix
      - name: Configure Tk
        run: |
          ./configure $CFGOPT --with-tcl=$INST_DIR/lib --prefix=$INST_DIR
        working-directory: tk/unix
      - name: Build Tk
        run: |
          make binaries libraries install
        working-directory: tk/unix
      - name: Pack Tk Library Files
        run: |
          mkdir 1dist.vfs
          cd 1dist.vfs
          unzip ../lib/libtcl*.zip
          (cd ../lib/tk[0-9]*; tar -cf -) | (cd tcl_library; tar -xf -)
          zip -r ../1dist.zip .
        working-directory: ${{ env.INST_DIR }}
      - name: Build Single-File Wish
        run: |
          build_name=wish${TCL_PATCHLEVEL}_unofficial
          cat ../tk/unix/wish 1dist.zip >> ${build_name}
          chmod +x ${build_name}
          tar -cf ${build_name}.tar ${build_name}
        working-directory: ${{ env.INST_DIR }}
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: Wish ${{ env.TCL_PATCHLEVEL }} Linux single-file build (unofficial)
          path: 1dist/*.tar
      # - name: Describe Installation Zip Contents
      #   if: ${{ always() }}
      #   run: |
      #     unzip -l 1dist.zip || true
      #   working-directory: ${{ env.INST_DIR }}
